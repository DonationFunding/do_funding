1.pom.xml
	oracle, datasource, mybatis, 유효성 검사, 파일 업로드
2.web.xml

3.root-context.xml
	bean 3개 작성
	SqlMapConfig.xml 1개 생성=> xml 3개 생성=>DOCTYPE 설정,configuration 태그 설정,mapper태그 설정
	
4. *.admin => admin-context.xml	
4. *.product => product-context.xml	
4. *.order => order-context.xml
4. *.member => member-context.xml
4. *.board => board-context.xml


-사이트 주인= 관리자
-회원 테이블
-게시판 테이블
-상품 테이블
-

DB 

-- 회원 테이블
drop sequence seqdo_members;
create sequence seqdo_members 
	increment by 1 
	start with 1 
	nocache ;
  
1.회원가입 form=기입목록은 아이디, 비밀번호 ,비밀번호확인, 이름, (자동기입=가입일)
1-1--계좌연동이 필요한 페이지입니다.(펀딩을 하려할때 if문)

2.admin
2-1 초기에 생성시에 insert에서 관리자 no를 0으로 잡는다.
2-2 직원은 관리자 페이지에서 button으로 등업하는 방식
DROP TABLE members CASCADE CONSTRAINTS;
create table do_members(
	no number not null,			//회원번호	(1번을 관리자로 설정하면 될꺼 같아요. 관리자 여러명 추후 만든다면 관리자 리스트를 배열로 해서 설정하고)
	admin number default 1		//1은 일반회원, 직원은 관리자 페이지에서 button으로 등업하는 방식
	id varchar2(10) primary key,//아이디 중복체크
	
	password varchar2(30),		//비밀번호
	
	name varchar2(30),			//이름
	
	birthday date not null,		//생일
	
	joindate date default sysdate,	//가입일
	
	gender varchar2(10),		//성별 
	
	hp1 varchar2(10),			//(폰)앞자리
	hp2 varchar2(10),			//(폰)중간자리
	hp3 varchar2(20),			//(폰)뒷자리
	
	address1 varchar2(30),		//주소1
	address2 varchar2(30),		//주소2(상세주소)
	
	accountbank varchar2(20),	//계좌은행
	account varchar2(20),		//계좌 
	
	mpoint number default 0 	//이건 잘 모르겟음(포인트 기능)
) ;

--insert추가해야함()

insert into do_members(no,admin,id,password,name,birthday,joindate,gender,hp1,hp2,hp3,address1,address2,accountbank,account,mpoint)
values(seqdo_members.nextval,'0','kim','1234','관리자1','2022-3-6',sysdate,'남자','010','4586','5870','서울특별시 어딘가로 123-4','펀딩아파트 205호','국민은행','123456-23442323','0');

insert into do_members(no,id,password,name,birthday,gender,hp1,hp2,hp3,address1,address2,accountbank,account,mpoint)values(seqdo_members.nextval,'kim','1234','김철수','2022-04-05','남자','010','2580','9876','서울시','은평구','국민은행','012345678','10000');

insert into do_members(id,name,password,salary,hiredate,gender,hobby,job,zipcode)
values(seqdo_members.nextval,'kim','김철수','1234',100,sysdate,'남자','게임','학생','123-456');

commit ;
ㅁㄴㅇㄹ
col id for a6
col password for a8
col name for a8
col gender for a6
col address1 for a10
col address2 for a10
col job for a6
select * from members;


--아래 sql문은 답글까지 insert 한 것
--insert 수정해야함	
insert into do_board(num,writer,email,subject,passwd,reg_date,ref,re_step,re_level,content,ip)
values(board_seq.nextval,'a1','a1','a1','1234','2015-1-1',1,0,0,'내용1','127.0.0.1');

commit;

-----------------------멤버+ admin---------------------------------

--제품(제품 후기 만드나요?)

drop sequence seqdo_product;
create sequence seqdo_product
  increment by 1
  start with 1
  minvalue 1
  nocache;


3. loginInfo에서 admin 이 0인(직원or관리자) 유저만 제품등록 가능/아마도 관리자페이지에서만 등록 가능
  
drop table do_product CASCADE CONSTRAINTS;
<<<<<<< HEAD
create table do_product(
	p_category_fk varchar2(100) not null ,   
	p_num number not null primary key,	
	p_writerv varchar2(10) references do_members(id) on delete cascade,
	p_subject varchar2(20) not null,		
	p_readcount int default 0,				
	p_image varchar2(500),				
	p_content varchar2(20) not null,					
	p_like varchar2(3000) not null,			
	p_option varchar2(500),
	p_option2 varchar2(500),
	p_origin_price int default 0,				
	p_total_price int default 0,			
	p_end_price int default 0,			
	p_point varchar2(20) not null,	
	p_ref number not null,
	p_re_step number not null,
	p_re_level number not null,
	p_reg_date date default sysdate,
	p_start_date date not null,
	p_end_date date not null		
=======
create table do_product( 
	p_num 		number  primary key,	//제품 번호()
	p_writer 	varchar2(10) references do_members(id) on delete cascade,	//작성자는 member id
	p_subject 	varchar2(20) not null,		//게시글 제목
	p_readcount int default 0,				//조회수
	p_image    	varchar2(500),				//이미지 파일
	p_content 	varchar2(20) not null		//게시글 내용			
	
	--데이터 한계 돌파는 나중에
	--찜 누른사람 아이디,아이디,아이디......
	p_like 		varchar2(3000) not null		//게시글 찜(찜 수는 length)			
			
	
	--옵션은 옵션과 value 한쌍을 하나의 값으로 묶어서 입력 ","
	--옵션/value 구분자: /
	--옵션덩어리,옵션덩어리  구분자: ,
	--옵션1(..)	selectbox(color/red), radiobox
	
	p_option		varchar2(500)
	
	--옵션2(..)
	p_option2		varchar2(500)
	
	--가격
	p_origin_price 	int default 0,			//단가	
	p_total_price 	int default 0,			//가격(현재금액)
	p_end_price 	int default 0,			//가격(목표금액) 157%~ 200% 있으니 자유롭게
	
	
	p_point 	varchar2(20) not null		//제품포인트	
	
	--후기게시판(이거 테이블 따로 잡을게요) == do_p_board
--	p_ref 		number not null,			//게시글(글)
--	p_re_step 	number not null,			//한 게시글에 대한 순번(글,댓글,답글)
--	p_re_level 	number not null,			//게시글 단계(글=0,댓글=1,답글=2,답글의답글=3...)

	--요일
<<<<<<< HEAD
	p_reg_date 		default sysdate  ,	//작성일 default sysdate 넣어도 괜찮을꺼 같습니다.
	p_start_date 	date not null,		//펀딩 시작일		
	p_end_date 		date not null		//펀딩 마감일	마감일 되면 펀딩못하게 막고, orderdetail 성공, 실패 (진행중)
=======

	p_reg_date 		default sysdate  ,	--작성일 default sysdate 넣어도 괜찮을꺼 같습니다.
	p_start_date 	date not null,		--펀딩 시작일		
	p_end_date 		date not null		--펀딩 마감일	마감일 되면 펀딩못하게 막고, orderdetail 성공, 실패 (진행중)


>>>>>>> refs/remotes/origin/do-kyg
>>>>>>> refs/remotes/origin/do-pms
);

--옵션 테이블
drop sequence seqdo_option;
create sequence seqdo_option
  increment by 1
  start with 1
  minvalue 1
  nocache;

drop table do_option CASCADE CONSTRAINTS;
create table do_option( 
	option_no number primary key,
	private String option_content;
	private number option_item_no references do_product(p_num) on delete cascade,
)




-- 카테고리 테이블
drop sequence catseq ;

--create sequence catseq nocache ;
create sequence catseq
increment by 1
start with 1
minvalue 1
maxvalue 10000
nocache;

drop table category cascade constraints purge ;
create table category(
	cnum 	number primary key,
	code 	varchar2(20) not null,	//카테고리 코드 핸드폰
	cname 	varchar2(50) not null,	//카테고리 이름
);


--주문 테이블
drop sequence seqoid ;
create sequence seqoid start with 1 increment by 1 nocache ;

 DROP TABLE orders CASCADE CONSTRAINTS;
 
create table orders(
--주문번호
  o_num number primary key,
--주문자
  o_mnum number references do_members(no) on delete set null,
--상품번호
  o_pnum number references do_product(p_num) on delete set null,
--주문수량
  o_qty number,
--주문일	 
  o_date date default sysdate ,
--펀딩 마감일
  p_end_date 		date not null,			//펀딩 마감일
--펀딩 시작일
  p_ing_state		varchar2(30) not null,	//펀딩 상태(if()걸기 :성공, 실패, 진행중)
);

-- 주문 상세 테이블
drop sequence seqodid;
create sequence seqodid start with 1 increment by 1 nocache ;

drop table order_details purge ;

create table order_details(
--주문상세 번호
  odid number primary key,
--주문번호
  oid number references orders(oid) on delete cascade,
--상품번호  
  p_num number references do_product(p_num) on delete set null,
--주문하면 단가*
  p_qty				int default 0,			//주문수량
  p_order_price		int default 0,			//주문금액

  p_total_price 	int default 0,			//가격(현재금액)
  p_end_price 		int default 0,			//가격(목표금액) 157%~ 200% 있으니 자유롭게	  
  p_end_date 		date not null,			//펀딩 마감일
  p_ing_state		varchar2(30) not null,	//펀딩 상태(if()걸기 :성공, 실패, 진행중)
	  
); 


--기본 게시판 --소통 창구용
drop sequence seqdo_board;
create sequence seqdo_board
  increment by 1
  start with 1
  minvalue 1
  maxvalue 10000
  nocache;
  
drop table do_board CASCADE CONSTRAINTS;
create table do_board( 
	b_num number not null primary key,	//게시글 번호(답글포함 전체 게시글 접근)
	b_writer varchar2(10) references do_members(id) on delete cascade,	//작성자는 member id
	b_subject varchar2(20) not null,		//게시글 제목
	b_reg_date date not null,				//작성일 default sysdate 넣어도 괜찮을꺼 같습니다.
	b_readcount int default 0,			//조회수
	--number대신 int도 사용가능
	--re답글관련
	b_ref number not null,				//게시글(글)
	b_re_step number not null,			//한 게시글에 대한 순번(글,댓글,답글)
	b_re_level number not null,			//게시글 단계(글=0,댓글=1,답글=2,답글의답글=3...)
	--답글마다 1씩 증가
	b_content varchar2(20) not null		//게시글 내용			
);


--일딴 패스
--후기 게시판 
drop sequence seqdo_p_board;
create sequence seqdo_p_board
  increment by 1
  start with 1
  minvalue 1
  maxvalue 10000
  nocache;
  
drop table do_p_board CASCADE CONSTRAINTS;
create table do_p_board( 
	pb_num number not null primary key,	//(후기)게시글 번호(답글포함 전체 게시글 접근)
	pb_p_num number references do_product(p_num) on delete cascade,	//각 상품별 후기이므로 상품번호
	pb_writer varchar2(10) references do_members(oid) on delete cascade,	//작성자는 member id
	pb_subject varchar2(20) not null,		//(후기)게시글 제목
	pb_reg_date date not null,				//작성일 default sysdate 넣어도 괜찮을꺼 같습니다.
	
	//조회수 후기에 조회수는 생략
	--pb_readcount int default 0,				

	--re답글관련
	pb_ref number not null,					//(후기)게시글(글)
	pb_re_step number not null,				//한 (후기)게시글에 대한 순번(글,댓글,답글)
	pb_re_level number not null,			//(후기)게시글 단계(글=0,댓글=1,답글=2,답글의답글=3...)
	--답글마다 1씩 증가
	pb_content varchar2(20) not null		//(후기)게시글 내용			
);
